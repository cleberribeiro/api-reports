version: '3.7'

services:

  postgres:
    container_name: postgres
    build:
      context: ./services/postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - .:/var/lib/postgresql/data
    env_file: ./services/postgres/postgres.env

  jasperreports-server:
    container_name: jasperreports-server
    build:
      context: ./services/jasperreports-server
      dockerfile: Dockerfile
    ports:
      - "11001:8080"
      - "11443:8443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./license:/usr/local/share/jasperserver/license
      - ./keystore:/usr/local/share/jasperserver/keystore
    env_file: ./services/jasperreports-server/jasperreports-server.env
    environment:
      - DB_HOST=postgres
    depends_on:
      - jasperreports-server-cmdline
    command: ["/wait-for-container-to-exit.sh", "jasperreports-server-cmdline", "-t" , "30", "--", "/entrypoint-ce.sh", "run"]

  jasperreports-server-cmdline:
    container_name: jasperreports-server-cmdline
    build:
      context: ./services/jasperreports-server
      dockerfile: Dockerfile-cmdline
    volumes:
      - ./license:/usr/local/share/jasperserver/license
      - ./keystore:/usr/local/share/jasperserver/keystore
    env_file: ./services/jasperreports-server/jasperreports-server.env
    environment:
      - DB_HOST=postgres
      - JRS_LOAD_SAMPLES=true
    depends_on:
      - postgres
    command: ["/wait-for-it.sh", "postgres:5432", "-t" , "30", "--", "/entrypoint-cmdline-ce.sh", "init"]

